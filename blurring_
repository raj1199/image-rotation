{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-21-a78c0c8623f9>, line 14)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-21-a78c0c8623f9>\"\u001b[1;36m, line \u001b[1;32m14\u001b[0m\n\u001b[1;33m    kernel = box\u001b[0m\n\u001b[1;37m         ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from PIL import Image, ImageDraw\n",
    "\n",
    "input_image = Image.open(\"iptask2.png\")\n",
    "input_pixels = input_image.load()\n",
    "\n",
    "\n",
    "box = (1/25)*np.ones((5, 5))\n",
    "\n",
    "\n",
    "gauss = (1/273)*np.array([[1, 4, 7, 4, 1], [4, 16, 26, 16, 4], [7, 26, 41, 26, 7], [4, 16, 26, 16, 4], [1, 4, 7, 4, 1]\n",
    "#sharp = (-1)*np.array([[1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, -25, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1]])\n",
    "\n",
    "kernel = box\n",
    "\n",
    "offset = len(kernel) // 2\n",
    "output_image = Image.new(\"RGB\", input_image.size)\n",
    "draw = ImageDraw.Draw(output_image)\n",
    "for x in range(offset, input_image.width - offset):\n",
    "    for y in range(offset, input_image.height - offset):\n",
    "        acc = [0, 0, 0]\n",
    "        for a in range(len(kernel)):\n",
    "            for b in range(len(kernel)):\n",
    "                xn = x + a - offset\n",
    "                yn = y + b - offset\n",
    "                pixel = input_pixels[xn, yn]\n",
    "                acc[0] += pixel[0] * kernel[a][b]\n",
    "                acc[1] += pixel[1] * kernel[a][b]\n",
    "                acc[2] += pixel[2] * kernel[a][b]\n",
    "\n",
    "        draw.point((x, y), (int(acc[0]), int(acc[1]), int(acc[2])))\n",
    "output_image.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
